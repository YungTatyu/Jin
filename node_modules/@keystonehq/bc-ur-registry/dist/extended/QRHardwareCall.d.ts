/// <reference types="node" />
import { RegistryItem } from "../RegistryItem";
import { DataItem } from '../lib';
import { KeyDerivation } from "./KeyDerivation";
export declare enum QRHardwareCallName {
    KeyDerivation = "key-derivation"
}
declare type QRHardwareCallParams = KeyDerivation;
export declare class QRHardwareCall extends RegistryItem {
    private name;
    private params;
    getRegistryType: () => import("../RegistryType").RegistryType;
    constructor(name: QRHardwareCallName, params: QRHardwareCallParams);
    getName: () => string;
    getParams: () => QRHardwareCallParams;
    toDataItem: () => DataItem;
    static fromDataItem: (dataItem: DataItem) => QRHardwareCall;
    static fromCBOR: (_cborPayload: Buffer) => QRHardwareCall;
}
export {};
