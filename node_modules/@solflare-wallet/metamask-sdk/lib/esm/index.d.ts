import { PublicKey, SendOptions } from '@solana/web3.js';
import { SolflareMetaMaskConfig, TransactionOrVersionedTransaction } from './types';
import EventEmitter from 'eventemitter3';
import { SolanaSignAndSendTransactionInput, SolanaSignAndSendTransactionOutput, SolanaSignMessageInput, SolanaSignMessageOutput, SolanaSignTransactionInput, SolanaSignTransactionOutput } from '@solana/wallet-standard-features';
import { StandardSolflareMetaMaskWalletAccount } from './standard/account';
export * from './types';
export * from './standard/account';
export default class SolflareMetaMask extends EventEmitter {
    private _network;
    private _iframeParams;
    private _element;
    private _iframe;
    private _publicKey;
    private _account;
    private _isConnected;
    private _connectHandler;
    private _messageHandlers;
    private static IFRAME_URL;
    constructor(config?: SolflareMetaMaskConfig);
    get publicKey(): PublicKey | null;
    get standardAccount(): StandardSolflareMetaMaskWalletAccount | null;
    get standardAccounts(): StandardSolflareMetaMaskWalletAccount[];
    get isConnected(): boolean;
    get connected(): boolean;
    get autoApprove(): boolean;
    connect(): Promise<void>;
    disconnect(): Promise<void>;
    signTransaction(transaction: TransactionOrVersionedTransaction): Promise<TransactionOrVersionedTransaction>;
    signAllTransactions(transactions: TransactionOrVersionedTransaction[]): Promise<TransactionOrVersionedTransaction[]>;
    signAndSendTransaction(transaction: TransactionOrVersionedTransaction, options?: SendOptions): Promise<string>;
    signMessage(data: Uint8Array, display?: 'hex' | 'utf8'): Promise<Uint8Array>;
    sign(data: Uint8Array, display?: 'hex' | 'utf8'): Promise<Uint8Array>;
    static isSupported(): Promise<boolean>;
    private _handleEvent;
    private _handleResize;
    private _handleMessage;
    private _removeElement;
    private _removeDanglingElements;
    private _injectElement;
    private _collapseIframe;
    private _expandIframe;
    private _resizeIframe;
    private _sendIframeMessage;
    private _connected;
    private _disconnected;
    private _standardConnected;
    private _standardDisconnected;
    standardSignAndSendTransaction(...inputs: SolanaSignAndSendTransactionInput[]): Promise<SolanaSignAndSendTransactionOutput[]>;
    standardSignTransaction(...inputs: SolanaSignTransactionInput[]): Promise<SolanaSignTransactionOutput[]>;
    standardSignMessage(...inputs: SolanaSignMessageInput[]): Promise<SolanaSignMessageOutput[]>;
}
