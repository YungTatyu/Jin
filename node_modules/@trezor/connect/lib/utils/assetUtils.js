"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getAssetByUrl = void 0;
const types_1 = require("../types");
const isDeviceModel = (model) => {
    return Object.values(types_1.DeviceModelInternal).includes(model);
};
const firmwareAssets = {
    [types_1.DeviceModelInternal.T1B1]: require('@trezor/connect-common/files/firmware/t1b1/releases.json'),
    [types_1.DeviceModelInternal.T2T1]: require('@trezor/connect-common/files/firmware/t2t1/releases.json'),
    [types_1.DeviceModelInternal.T2B1]: require('@trezor/connect-common/files/firmware/t2b1/releases.json'),
    [types_1.DeviceModelInternal.T3B1]: require('@trezor/connect-common/files/firmware/t3b1/releases.json'),
    [types_1.DeviceModelInternal.T3T1]: require('@trezor/connect-common/files/firmware/t3t1/releases.json'),
};
const getAssetByUrl = (url) => {
    const fileUrl = url.split('?')[0];
    switch (fileUrl) {
        case './data/coins.json':
            return require('@trezor/connect-common/files/coins.json');
        case './data/coins-eth.json':
            return require('@trezor/connect-common/files/coins-eth.json');
        case './data/bridge/releases.json':
            return require('@trezor/connect-common/files/bridge/releases.json');
        case './data/messages/messages.json':
            return require('@trezor/protobuf/messages.json');
    }
    const firmwareMatch = fileUrl.match(/\/firmware\/(\w+)\/releases\.json$/);
    if (firmwareMatch) {
        const modelKey = firmwareMatch[1].toUpperCase();
        if (isDeviceModel(modelKey)) {
            return firmwareAssets[modelKey];
        }
    }
    return null;
};
exports.getAssetByUrl = getAssetByUrl;
//# sourceMappingURL=assetUtils.js.map