import { Params, BundledParams, Response } from '../params';
import { Static } from '@trezor/schema-utils';
export type GetPublicKey = Static<typeof GetPublicKey>;
export declare const GetPublicKey: import("@sinclair/typebox/build/esm/index.mjs").TIntersect<[import("@trezor/schema-utils").TObject<{
    path: import("@sinclair/typebox/build/esm/index.mjs").TUnion<[import("@sinclair/typebox/build/esm/index.mjs").TString, import("@sinclair/typebox/build/esm/index.mjs").TArray<import("@sinclair/typebox/build/esm/index.mjs").TNumber>]>;
    showOnTrezor: import("@sinclair/typebox/build/esm/index.mjs").TOptional<import("@sinclair/typebox/build/esm/index.mjs").TBoolean>;
    suppressBackupWarning: import("@sinclair/typebox/build/esm/index.mjs").TOptional<import("@sinclair/typebox/build/esm/index.mjs").TBoolean>;
    chunkify: import("@sinclair/typebox/build/esm/index.mjs").TOptional<import("@sinclair/typebox/build/esm/index.mjs").TBoolean>;
}>, import("@trezor/schema-utils").TObject<{
    coin: import("@sinclair/typebox/build/esm/index.mjs").TOptional<import("@sinclair/typebox/build/esm/index.mjs").TString>;
    crossChain: import("@sinclair/typebox/build/esm/index.mjs").TOptional<import("@sinclair/typebox/build/esm/index.mjs").TBoolean>;
    scriptType: import("@sinclair/typebox/build/esm/index.mjs").TOptional<import("@sinclair/typebox/build/esm/index.mjs").TUnion<[import("@sinclair/typebox/build/esm/index.mjs").TLiteral<"SPENDADDRESS">, import("@sinclair/typebox/build/esm/index.mjs").TLiteral<"SPENDMULTISIG">, import("@sinclair/typebox/build/esm/index.mjs").TLiteral<"SPENDWITNESS">, import("@sinclair/typebox/build/esm/index.mjs").TLiteral<"SPENDP2SHWITNESS">, import("@sinclair/typebox/build/esm/index.mjs").TLiteral<"SPENDTAPROOT">]>>;
    ignoreXpubMagic: import("@sinclair/typebox/build/esm/index.mjs").TOptional<import("@sinclair/typebox/build/esm/index.mjs").TBoolean>;
    ecdsaCurveName: import("@sinclair/typebox/build/esm/index.mjs").TOptional<import("@sinclair/typebox/build/esm/index.mjs").TString>;
    unlockPath: import("@sinclair/typebox/build/esm/index.mjs").TOptional<import("@trezor/schema-utils").TObject<{
        address_n: import("@sinclair/typebox/build/esm/index.mjs").TArray<import("@sinclair/typebox/build/esm/index.mjs").TNumber>;
        mac: import("@sinclair/typebox/build/esm/index.mjs").TOptional<import("@sinclair/typebox/build/esm/index.mjs").TString>;
    }>>;
}>]>;
export type HDNodeResponse = Static<typeof HDNodeResponse>;
export declare const HDNodeResponse: import("@trezor/schema-utils").TObject<{
    path: import("@sinclair/typebox/build/esm/index.mjs").TArray<import("@sinclair/typebox/build/esm/index.mjs").TNumber>;
    serializedPath: import("@sinclair/typebox/build/esm/index.mjs").TString;
    childNum: import("@sinclair/typebox/build/esm/index.mjs").TNumber;
    xpub: import("@sinclair/typebox/build/esm/index.mjs").TString;
    xpubSegwit: import("@sinclair/typebox/build/esm/index.mjs").TOptional<import("@sinclair/typebox/build/esm/index.mjs").TString>;
    descriptorChecksum: import("@sinclair/typebox/build/esm/index.mjs").TOptional<import("@sinclair/typebox/build/esm/index.mjs").TString>;
    chainCode: import("@sinclair/typebox/build/esm/index.mjs").TString;
    publicKey: import("@sinclair/typebox/build/esm/index.mjs").TString;
    fingerprint: import("@sinclair/typebox/build/esm/index.mjs").TNumber;
    depth: import("@sinclair/typebox/build/esm/index.mjs").TNumber;
}>;
export declare function getPublicKey(params: Params<GetPublicKey>): Response<HDNodeResponse>;
export declare function getPublicKey(params: BundledParams<GetPublicKey>): Response<HDNodeResponse[]>;
//# sourceMappingURL=getPublicKey.d.ts.map