import type { Params, Response } from '../params';
import { Static } from '@trezor/schema-utils';
import { PROTO } from '../../constants';
export type AuthorizeCoinjoin = Static<typeof AuthorizeCoinjoin>;
export declare const AuthorizeCoinjoin: import("@trezor/schema-utils").TObject<{
    path: import("@sinclair/typebox/build/esm/index.mjs").TUnion<[import("@sinclair/typebox/build/esm/index.mjs").TString, import("@sinclair/typebox/build/esm/index.mjs").TArray<import("@sinclair/typebox/build/esm/index.mjs").TNumber>]>;
    coordinator: import("@sinclair/typebox/build/esm/index.mjs").TString;
    maxRounds: import("@sinclair/typebox/build/esm/index.mjs").TNumber;
    maxCoordinatorFeeRate: import("@sinclair/typebox/build/esm/index.mjs").TNumber;
    maxFeePerKvbyte: import("@sinclair/typebox/build/esm/index.mjs").TNumber;
    coin: import("@sinclair/typebox/build/esm/index.mjs").TOptional<import("@sinclair/typebox/build/esm/index.mjs").TString>;
    scriptType: import("@sinclair/typebox/build/esm/index.mjs").TOptional<import("@sinclair/typebox/build/esm/index.mjs").TUnion<[import("@sinclair/typebox/build/esm/index.mjs").TLiteral<"SPENDADDRESS">, import("@sinclair/typebox/build/esm/index.mjs").TLiteral<"SPENDMULTISIG">, import("@sinclair/typebox/build/esm/index.mjs").TLiteral<"SPENDWITNESS">, import("@sinclair/typebox/build/esm/index.mjs").TLiteral<"SPENDP2SHWITNESS">, import("@sinclair/typebox/build/esm/index.mjs").TLiteral<"SPENDTAPROOT">]>>;
    amountUnit: import("@sinclair/typebox/build/esm/index.mjs").TOptional<import("@sinclair/typebox/build/esm/index.mjs").TEnum<typeof PROTO.AmountUnit>>;
    preauthorized: import("@sinclair/typebox/build/esm/index.mjs").TOptional<import("@sinclair/typebox/build/esm/index.mjs").TBoolean>;
}>;
export declare function authorizeCoinjoin(params: Params<AuthorizeCoinjoin>): Response<PROTO.Success>;
//# sourceMappingURL=authorizeCoinjoin.d.ts.map