import { Static } from '@trezor/schema-utils';
import { DerivationPath } from '../../params';
export type EthereumSignMessage = Static<typeof EthereumSignMessage>;
export declare const EthereumSignMessage: import("@trezor/schema-utils").TObject<{
    path: import("@sinclair/typebox/build/esm/index.mjs").TUnion<[import("@sinclair/typebox/build/esm/index.mjs").TString, import("@sinclair/typebox/build/esm/index.mjs").TArray<import("@sinclair/typebox/build/esm/index.mjs").TNumber>]>;
    message: import("@sinclair/typebox/build/esm/index.mjs").TString;
    hex: import("@sinclair/typebox/build/esm/index.mjs").TOptional<import("@sinclair/typebox/build/esm/index.mjs").TBoolean>;
}>;
export type EthereumTransaction = Static<typeof EthereumTransaction>;
export declare const EthereumTransaction: import("@trezor/schema-utils").TObject<{
    to: import("@sinclair/typebox/build/esm/index.mjs").TString;
    value: import("@sinclair/typebox/build/esm/index.mjs").TString;
    gasPrice: import("@sinclair/typebox/build/esm/index.mjs").TString;
    gasLimit: import("@sinclair/typebox/build/esm/index.mjs").TString;
    maxFeePerGas: import("@sinclair/typebox/build/esm/index.mjs").TOptional<import("@sinclair/typebox/build/esm/index.mjs").TUndefined>;
    maxPriorityFeePerGas: import("@sinclair/typebox/build/esm/index.mjs").TOptional<import("@sinclair/typebox/build/esm/index.mjs").TUndefined>;
    nonce: import("@sinclair/typebox/build/esm/index.mjs").TString;
    data: import("@sinclair/typebox/build/esm/index.mjs").TOptional<import("@sinclair/typebox/build/esm/index.mjs").TString>;
    chainId: import("@sinclair/typebox/build/esm/index.mjs").TNumber;
    txType: import("@sinclair/typebox/build/esm/index.mjs").TOptional<import("@sinclair/typebox/build/esm/index.mjs").TNumber>;
}>;
export type EthereumAccessList = Static<typeof EthereumAccessList>;
export declare const EthereumAccessList: import("@trezor/schema-utils").TObject<{
    address: import("@sinclair/typebox/build/esm/index.mjs").TString;
    storageKeys: import("@sinclair/typebox/build/esm/index.mjs").TArray<import("@sinclair/typebox/build/esm/index.mjs").TString>;
}>;
export type EthereumTransactionEIP1559 = Static<typeof EthereumTransactionEIP1559>;
export declare const EthereumTransactionEIP1559: import("@trezor/schema-utils").TObject<{
    to: import("@sinclair/typebox/build/esm/index.mjs").TString;
    value: import("@sinclair/typebox/build/esm/index.mjs").TString;
    gasLimit: import("@sinclair/typebox/build/esm/index.mjs").TString;
    gasPrice: import("@sinclair/typebox/build/esm/index.mjs").TOptional<import("@sinclair/typebox/build/esm/index.mjs").TUndefined>;
    nonce: import("@sinclair/typebox/build/esm/index.mjs").TString;
    data: import("@sinclair/typebox/build/esm/index.mjs").TOptional<import("@sinclair/typebox/build/esm/index.mjs").TString>;
    chainId: import("@sinclair/typebox/build/esm/index.mjs").TNumber;
    maxFeePerGas: import("@sinclair/typebox/build/esm/index.mjs").TString;
    maxPriorityFeePerGas: import("@sinclair/typebox/build/esm/index.mjs").TString;
    accessList: import("@sinclair/typebox/build/esm/index.mjs").TOptional<import("@sinclair/typebox/build/esm/index.mjs").TArray<import("@trezor/schema-utils").TObject<{
        address: import("@sinclair/typebox/build/esm/index.mjs").TString;
        storageKeys: import("@sinclair/typebox/build/esm/index.mjs").TArray<import("@sinclair/typebox/build/esm/index.mjs").TString>;
    }>>>;
}>;
export type EthereumSignTransaction = Static<typeof EthereumSignTransaction>;
export declare const EthereumSignTransaction: import("@trezor/schema-utils").TObject<{
    path: import("@sinclair/typebox/build/esm/index.mjs").TUnion<[import("@sinclair/typebox/build/esm/index.mjs").TString, import("@sinclair/typebox/build/esm/index.mjs").TArray<import("@sinclair/typebox/build/esm/index.mjs").TNumber>]>;
    transaction: import("@sinclair/typebox/build/esm/index.mjs").TUnion<[import("@trezor/schema-utils").TObject<{
        to: import("@sinclair/typebox/build/esm/index.mjs").TString;
        value: import("@sinclair/typebox/build/esm/index.mjs").TString;
        gasPrice: import("@sinclair/typebox/build/esm/index.mjs").TString;
        gasLimit: import("@sinclair/typebox/build/esm/index.mjs").TString;
        maxFeePerGas: import("@sinclair/typebox/build/esm/index.mjs").TOptional<import("@sinclair/typebox/build/esm/index.mjs").TUndefined>;
        maxPriorityFeePerGas: import("@sinclair/typebox/build/esm/index.mjs").TOptional<import("@sinclair/typebox/build/esm/index.mjs").TUndefined>;
        nonce: import("@sinclair/typebox/build/esm/index.mjs").TString;
        data: import("@sinclair/typebox/build/esm/index.mjs").TOptional<import("@sinclair/typebox/build/esm/index.mjs").TString>;
        chainId: import("@sinclair/typebox/build/esm/index.mjs").TNumber;
        txType: import("@sinclair/typebox/build/esm/index.mjs").TOptional<import("@sinclair/typebox/build/esm/index.mjs").TNumber>;
    }>, import("@trezor/schema-utils").TObject<{
        to: import("@sinclair/typebox/build/esm/index.mjs").TString;
        value: import("@sinclair/typebox/build/esm/index.mjs").TString;
        gasLimit: import("@sinclair/typebox/build/esm/index.mjs").TString;
        gasPrice: import("@sinclair/typebox/build/esm/index.mjs").TOptional<import("@sinclair/typebox/build/esm/index.mjs").TUndefined>;
        nonce: import("@sinclair/typebox/build/esm/index.mjs").TString;
        data: import("@sinclair/typebox/build/esm/index.mjs").TOptional<import("@sinclair/typebox/build/esm/index.mjs").TString>;
        chainId: import("@sinclair/typebox/build/esm/index.mjs").TNumber;
        maxFeePerGas: import("@sinclair/typebox/build/esm/index.mjs").TString;
        maxPriorityFeePerGas: import("@sinclair/typebox/build/esm/index.mjs").TString;
        accessList: import("@sinclair/typebox/build/esm/index.mjs").TOptional<import("@sinclair/typebox/build/esm/index.mjs").TArray<import("@trezor/schema-utils").TObject<{
            address: import("@sinclair/typebox/build/esm/index.mjs").TString;
            storageKeys: import("@sinclair/typebox/build/esm/index.mjs").TArray<import("@sinclair/typebox/build/esm/index.mjs").TString>;
        }>>>;
    }>]>;
    chunkify: import("@sinclair/typebox/build/esm/index.mjs").TOptional<import("@sinclair/typebox/build/esm/index.mjs").TBoolean>;
}>;
export type EthereumSignedTx = Static<typeof EthereumSignedTx>;
export declare const EthereumSignedTx: import("@trezor/schema-utils").TObject<{
    v: import("@sinclair/typebox/build/esm/index.mjs").TString;
    r: import("@sinclair/typebox/build/esm/index.mjs").TString;
    s: import("@sinclair/typebox/build/esm/index.mjs").TString;
    serializedTx: import("@sinclair/typebox/build/esm/index.mjs").TString;
}>;
type EthereumSignTypedDataTypeProperty = Static<typeof EthereumSignTypedDataTypeProperty>;
declare const EthereumSignTypedDataTypeProperty: import("@trezor/schema-utils").TObject<{
    name: import("@sinclair/typebox/build/esm/index.mjs").TString;
    type: import("@sinclair/typebox/build/esm/index.mjs").TString;
}>;
export interface EthereumSignTypedDataTypes {
    EIP712Domain: EthereumSignTypedDataTypeProperty[];
    [additionalProperties: string]: EthereumSignTypedDataTypeProperty[];
}
export declare const EthereumSignTypedDataTypes: import("@trezor/schema-utils").TObject<{
    EIP712Domain: import("@sinclair/typebox/build/esm/index.mjs").TArray<import("@trezor/schema-utils").TObject<{
        name: import("@sinclair/typebox/build/esm/index.mjs").TString;
        type: import("@sinclair/typebox/build/esm/index.mjs").TString;
    }>>;
}>;
export interface EthereumSignTypedDataMessage<T extends EthereumSignTypedDataTypes> {
    types: T;
    primaryType: keyof T;
    domain: {
        name?: string;
        version?: string;
        chainId?: number | bigint | string;
        verifyingContract?: string;
        salt?: ArrayBuffer | string;
    };
    message: {
        [fieldName: string]: any;
    };
}
export declare const EthereumSignTypedDataMessage: import("@trezor/schema-utils").TObject<{
    types: import("@trezor/schema-utils").TObject<{
        EIP712Domain: import("@sinclair/typebox/build/esm/index.mjs").TArray<import("@trezor/schema-utils").TObject<{
            name: import("@sinclair/typebox/build/esm/index.mjs").TString;
            type: import("@sinclair/typebox/build/esm/index.mjs").TString;
        }>>;
    }>;
    primaryType: import("@sinclair/typebox/build/esm/index.mjs").TString;
    domain: import("@trezor/schema-utils").TObject<{
        name: import("@sinclair/typebox/build/esm/index.mjs").TOptional<import("@sinclair/typebox/build/esm/index.mjs").TString>;
        version: import("@sinclair/typebox/build/esm/index.mjs").TOptional<import("@sinclair/typebox/build/esm/index.mjs").TString>;
        chainId: import("@sinclair/typebox/build/esm/index.mjs").TOptional<import("@sinclair/typebox/build/esm/index.mjs").TUnion<[import("@sinclair/typebox/build/esm/index.mjs").TNumber, import("@sinclair/typebox/build/esm/index.mjs").TBigInt, import("@sinclair/typebox/build/esm/index.mjs").TString]>>;
        verifyingContract: import("@sinclair/typebox/build/esm/index.mjs").TOptional<import("@sinclair/typebox/build/esm/index.mjs").TString>;
        salt: import("@sinclair/typebox/build/esm/index.mjs").TOptional<import("@sinclair/typebox/build/esm/index.mjs").TUnion<[import("@trezor/schema-utils/lib/custom-types/array-buffer").TArrayBuffer, import("@sinclair/typebox/build/esm/index.mjs").TString]>>;
    }>;
    message: import("@trezor/schema-utils").TObject<{}>;
}>;
export interface EthereumSignTypedData<T extends EthereumSignTypedDataTypes> {
    path: DerivationPath;
    data: EthereumSignTypedDataMessage<T>;
    metamask_v4_compat: boolean;
    domain_separator_hash?: undefined;
    message_hash?: undefined;
}
export declare const EthereumSignTypedData: import("@trezor/schema-utils").TObject<{
    path: import("@sinclair/typebox/build/esm/index.mjs").TUnion<[import("@sinclair/typebox/build/esm/index.mjs").TString, import("@sinclair/typebox/build/esm/index.mjs").TArray<import("@sinclair/typebox/build/esm/index.mjs").TNumber>]>;
    data: import("@trezor/schema-utils").TObject<{
        types: import("@trezor/schema-utils").TObject<{
            EIP712Domain: import("@sinclair/typebox/build/esm/index.mjs").TArray<import("@trezor/schema-utils").TObject<{
                name: import("@sinclair/typebox/build/esm/index.mjs").TString;
                type: import("@sinclair/typebox/build/esm/index.mjs").TString;
            }>>;
        }>;
        primaryType: import("@sinclair/typebox/build/esm/index.mjs").TString;
        domain: import("@trezor/schema-utils").TObject<{
            name: import("@sinclair/typebox/build/esm/index.mjs").TOptional<import("@sinclair/typebox/build/esm/index.mjs").TString>;
            version: import("@sinclair/typebox/build/esm/index.mjs").TOptional<import("@sinclair/typebox/build/esm/index.mjs").TString>;
            chainId: import("@sinclair/typebox/build/esm/index.mjs").TOptional<import("@sinclair/typebox/build/esm/index.mjs").TUnion<[import("@sinclair/typebox/build/esm/index.mjs").TNumber, import("@sinclair/typebox/build/esm/index.mjs").TBigInt, import("@sinclair/typebox/build/esm/index.mjs").TString]>>;
            verifyingContract: import("@sinclair/typebox/build/esm/index.mjs").TOptional<import("@sinclair/typebox/build/esm/index.mjs").TString>;
            salt: import("@sinclair/typebox/build/esm/index.mjs").TOptional<import("@sinclair/typebox/build/esm/index.mjs").TUnion<[import("@trezor/schema-utils/lib/custom-types/array-buffer").TArrayBuffer, import("@sinclair/typebox/build/esm/index.mjs").TString]>>;
        }>;
        message: import("@trezor/schema-utils").TObject<{}>;
    }>;
    metamask_v4_compat: import("@sinclair/typebox/build/esm/index.mjs").TBoolean;
    domain_separator_hash: import("@sinclair/typebox/build/esm/index.mjs").TOptional<import("@sinclair/typebox/build/esm/index.mjs").TUndefined>;
    message_hash: import("@sinclair/typebox/build/esm/index.mjs").TOptional<import("@sinclair/typebox/build/esm/index.mjs").TUndefined>;
}>;
export interface EthereumSignTypedHash<T extends EthereumSignTypedDataTypes> {
    path: DerivationPath;
    data: EthereumSignTypedDataMessage<T>;
    metamask_v4_compat: boolean;
    domain_separator_hash: string;
    message_hash?: string;
}
export declare const EthereumSignTypedHash: import("@trezor/schema-utils").TObject<{
    path: import("@sinclair/typebox/build/esm/index.mjs").TUnion<[import("@sinclair/typebox/build/esm/index.mjs").TString, import("@sinclair/typebox/build/esm/index.mjs").TArray<import("@sinclair/typebox/build/esm/index.mjs").TNumber>]>;
    data: import("@trezor/schema-utils").TObject<{
        types: import("@trezor/schema-utils").TObject<{
            EIP712Domain: import("@sinclair/typebox/build/esm/index.mjs").TArray<import("@trezor/schema-utils").TObject<{
                name: import("@sinclair/typebox/build/esm/index.mjs").TString;
                type: import("@sinclair/typebox/build/esm/index.mjs").TString;
            }>>;
        }>;
        primaryType: import("@sinclair/typebox/build/esm/index.mjs").TString;
        domain: import("@trezor/schema-utils").TObject<{
            name: import("@sinclair/typebox/build/esm/index.mjs").TOptional<import("@sinclair/typebox/build/esm/index.mjs").TString>;
            version: import("@sinclair/typebox/build/esm/index.mjs").TOptional<import("@sinclair/typebox/build/esm/index.mjs").TString>;
            chainId: import("@sinclair/typebox/build/esm/index.mjs").TOptional<import("@sinclair/typebox/build/esm/index.mjs").TUnion<[import("@sinclair/typebox/build/esm/index.mjs").TNumber, import("@sinclair/typebox/build/esm/index.mjs").TBigInt, import("@sinclair/typebox/build/esm/index.mjs").TString]>>;
            verifyingContract: import("@sinclair/typebox/build/esm/index.mjs").TOptional<import("@sinclair/typebox/build/esm/index.mjs").TString>;
            salt: import("@sinclair/typebox/build/esm/index.mjs").TOptional<import("@sinclair/typebox/build/esm/index.mjs").TUnion<[import("@trezor/schema-utils/lib/custom-types/array-buffer").TArrayBuffer, import("@sinclair/typebox/build/esm/index.mjs").TString]>>;
        }>;
        message: import("@trezor/schema-utils").TObject<{}>;
    }>;
    metamask_v4_compat: import("@sinclair/typebox/build/esm/index.mjs").TBoolean;
    domain_separator_hash: import("@sinclair/typebox/build/esm/index.mjs").TString;
    message_hash: import("@sinclair/typebox/build/esm/index.mjs").TOptional<import("@sinclair/typebox/build/esm/index.mjs").TString>;
}>;
export type EthereumVerifyMessage = Static<typeof EthereumVerifyMessage>;
export declare const EthereumVerifyMessage: import("@trezor/schema-utils").TObject<{
    address: import("@sinclair/typebox/build/esm/index.mjs").TString;
    message: import("@sinclair/typebox/build/esm/index.mjs").TString;
    hex: import("@sinclair/typebox/build/esm/index.mjs").TOptional<import("@sinclair/typebox/build/esm/index.mjs").TBoolean>;
    signature: import("@sinclair/typebox/build/esm/index.mjs").TString;
}>;
export {};
//# sourceMappingURL=index.d.ts.map