"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getBinary = void 0;
const utils_1 = require("@trezor/utils");
const assets_1 = require("../../utils/assets");
const getBinary = ({ releases, baseUrl, version, btcOnly, intermediaryVersion, }) => {
    if (intermediaryVersion) {
        return (0, assets_1.httpRequest)(`${baseUrl}/firmware/t1b1/trezor-t1b1-inter-v${intermediaryVersion}.bin`, 'binary');
    }
    const releaseByFirmware = releases.find(r => version &&
        utils_1.versionUtils.isVersionArray(version) &&
        utils_1.versionUtils.isEqual(r.version, version));
    if (releaseByFirmware === undefined) {
        throw new Error('no firmware found for this device');
    }
    const fwUrl = releaseByFirmware[btcOnly ? 'url_bitcoinonly' : 'url'];
    const url = `${baseUrl}/${fwUrl}`;
    return (0, assets_1.httpRequest)(url, 'binary');
};
exports.getBinary = getBinary;
//# sourceMappingURL=getBinary.js.map